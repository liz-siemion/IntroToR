[["file-paths.html", "Chapter 3 File paths 3.1 What is a file path? 3.2 Different separators between operating systems 3.3 Absolute and Relative file paths 3.4 Navigating outside the working directory 3.5 Using the Tab Shortcut in RStudio", " Chapter 3 File paths To manually set the working directory or load a file from a specific location, it’s important to understand how file paths work. 3.1 What is a file path? File paths are addresses to different locations or files on a computer. Your computer uses a system of nested folders. Image from R for Epidemiology (https://www.r4epi.com) File paths are addresses to different locations or files within this nested framework. They represents the order of nested folders that the computer must go through to find that particular item. Each folder is separated by a slash. We can use Absolute or Relative file paths in R to locate files. Knowing the file path is important when you need to set your working directory. See this website for a detailed explanation. 3.2 Different separators between operating systems Different operating systems use different separators between folders of a file path. On windows, it is \\ On Mac/Linux, it is / R uses the / separator, so in windows, remember to either use a backward slash \\\\ or change all \\ to / between your folders of your file path. 3.3 Absolute and Relative file paths We can use Absolute or Relative file paths to give R directions to where we want to go. Absolute Paths: describe where a file is located relative to the root directory of the computer. This can be done on windows through right clicking the file path in windows explorer and selecting copy as text, or right clicking a file, holding the option key and selecting copy as path name on a macbook. Windows example: C:/Users/Documents/Teaching/IntroR/data/Intro-to-R-Workshop.csv Macbook example: /Users/lizsiemion/Documents/Teaching/IntroR/Intro-to-R-Workshop.csv Relative Paths: describe file location with respect to the current working directory. This just means that the file path starts with the location of the home directory. Windows example: IntroR/data/Intro-to-R-Workshop.csv Macbook example: IntroR/data/Intro-to-R-Workshop.csv ) It can be a bit cumbersome to work with absolute file paths. Since R Projects automatically sets the working directory as the project folder, we can use relative paths without any sort of additional set-up. Using relative paths also makes our code more readable, and easier to share and maintain. If we want to set our working directory manually, we can either use absolute or relative file paths. I recommend not changing the working directory within your script, as this can limit reproducibility. # check working directory getwd() # Assign working directory to new location using absolute path setwd(&quot;/Users/lizsiemion/Documents/teaching/Intro-to-R-Workshop&quot;) # Again, I do not recommend changing the working directory from an R project. 3.4 Navigating outside the working directory Let’s say we want to load a csv file into R that is outside of our working directory subfolders. How might we do that with absolute or relative paths from our current working directory? The absolute path is the full file path from our computer’s root directory. If we want to use the relative path, we need tell R to go up a given number of parent folder levels from a working directory, and then to the given location within that parent folder. This can be accomplished using ../ syntax. ./ tells R to go to the folder of the working directory ../ tells R to go to the parent folder of the working directory ../../ tells R to go to the parent folder of the parent folder of the working directory Let’s look at an example. Say our folder structure resembles the structure below and our RProject is located in the Intro-to-R-Workshop folder. Step 1: How many parent levels do we need to move up? Looks like we need to move up 1 level to the teaching folder ../, and another level up to the Documents folder ../. Step 2: Now that we are in the Documents folder, what is the relative path to to the example_file.txt? We need to go into the Coursework folder, and then the EcologyCenter folder, where example_file.txt is ultimately located. Coursework/EC-tidyverse-workshop-main/example_file.txt By combining steps 1 and 2, we’ve create the relative file path and can load the example_file.txt into our environment with read.csv(). read.csv(\"../../Coursework/ecologycenter/example_file.txt\") 3.5 Using the Tab Shortcut in RStudio The Tab shortcut in RStudio is a powerful shortcut that helps you write code faster and with fewer errors. It’s especially helpful for auto-completing file paths, function names, object names, and more. When you’re loading a file (e.g., using read.csv()), you can use the Tab key to help you find and insert the correct relative file path. For example: read.csv(\"data/ Then press the Tab key. A drop down list will appear showing the contents of the data/ folder (if it exists). You can then use the arrow keys to select a file and select Enter to insert it into the code. The Tab key shortcut helps avoid typos and ensures you’re referencing the correct file. EXERCISE 1: FILE PATHS Enter getwd() into the console to return the absolute file path Use a relative file path to load the bighorn capture table using read.csv(“TYPE_RELATIVE_FILE_PATH”). The read.csv() function tells R to load the CSV file into your Environment. Make sure the file path is placed inside quotes and within the parentheses. Tip: Try using the Tab key after typing the opening quote to help you navigate and generate the correct relative file path. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
